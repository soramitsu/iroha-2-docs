import{_ as s,o as n,c as a,Q as o}from"./chunks/framework.1293becd.js";const u=JSON.parse('{"title":"Permissions","description":"","frontmatter":{},"headers":[],"relativePath":"guide/blockchain/permissions.md","filePath":"guide/blockchain/permissions.md","lastUpdated":1695725126000}'),l={name:"guide/blockchain/permissions.md"},e=o(`<h1 id="permissions" tabindex="-1">Permissions <a class="header-anchor" href="#permissions" aria-label="Permalink to &quot;Permissions&quot;">​</a></h1><p>Accounts need permission tokens for various actions on a blockchain, e.g. to mint or burn assets.</p><p>There is a difference between a public and a private blockchain in terms of permissions granted to users. In a public blockchain, most accounts have the same set of permissions. In a private blockchain, most accounts are assumed not to be able to do anything outside of their own account or domain unless explicitly granted said permission.</p><p>Having a permission to do something means having a <code>PermissionToken</code> to do so. There are two ways for users to receive permission tokens: they can be granted directly or as a part of a <a href="#permission-groups-roles"><code>Role</code></a> (a set of permission tokens). Permissions are granted via <code>Grant</code> special instruction. Permission tokens and roles do not expire, they can only be removed using <code>Revoke</code> instruction.</p><h2 id="permission-tokens" tabindex="-1">Permission Tokens <a class="header-anchor" href="#permission-tokens" aria-label="Permalink to &quot;Permission Tokens&quot;">​</a></h2><p>Permission token definitions have parameters. When a new permission token is registered, the names of the parameters and their types are checked against their names and types in the token definition. The token registration fails if there are too few parameters, if the parameter types don&#39;t match the definition, or parameters with unrecognised names.</p><p>Here are some examples of parameters used for various permission tokens:</p><ul><li><p>A token that grants permission to change the values associated to keys in a <code>Store</code> asset needs the <code>asset_definition_id</code> parameter of type <code>Id</code>:</p><div class="language-json vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#9ECBFF;">&quot;params&quot;</span><span style="color:#E1E4E8;">: {</span></span>
<span class="line"><span style="color:#E1E4E8;">     </span><span style="color:#79B8FF;">&quot;asset_definition_id&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;Id&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#032F62;">&quot;params&quot;</span><span style="color:#24292E;">: {</span></span>
<span class="line"><span style="color:#24292E;">     </span><span style="color:#005CC5;">&quot;asset_definition_id&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;Id&quot;</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div></li><li><p>By contrast, the permission token that grants the permission to set keys to values in user <em>metadata</em> needs the <code>account_id</code> parameter of type <code>Id</code>:</p><div class="language-json vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#9ECBFF;">&quot;params&quot;</span><span style="color:#E1E4E8;">: {</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#79B8FF;">&quot;account_id&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;Id&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#032F62;">&quot;params&quot;</span><span style="color:#24292E;">: {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#005CC5;">&quot;account_id&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;Id&quot;</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div></li><li><p>The permission token that grants the permission to transfer assets only a fixed number of times per some time period, needs these two parameters:</p><div class="language-json vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#9ECBFF;">&quot;params&quot;</span><span style="color:#E1E4E8;">: {</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#79B8FF;">&quot;count&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;U32&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#79B8FF;">&quot;period&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;U128&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#032F62;">&quot;params&quot;</span><span style="color:#24292E;">: {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#005CC5;">&quot;count&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;U32&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#005CC5;">&quot;period&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;U128&quot;</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><p>Where the <code>period</code> is specified as a standard Duration since the UNIX epoch in milliseconds (more details about <a href="https://doc.rust-lang.org/std/time/struct.SystemTime.html" target="_blank" rel="noreferrer">time in Rust</a>).</p></li></ul><p>The following permission tokens are pre-configured in Iroha 2:</p><table><thead><tr><th>Permission Token</th><th>Category</th><th>Operation</th></tr></thead><tbody><tr><td><a href="#cansetkeyvalueinusermetadata"><code>CanSetKeyValueInUserMetadata</code></a></td><td>Account</td><td>Set key value</td></tr><tr><td><a href="#canremovekeyvalueinusermetadata"><code>CanRemoveKeyValueInUserMetadata</code></a></td><td>Account</td><td>Remove key value</td></tr><tr><td><a href="#canburnuserassets"><code>CanBurnUserAssets</code></a></td><td>Asset</td><td>Burn</td></tr><tr><td><a href="#cansetkeyvalueinuserassets"><code>CanSetKeyValueInUserAssets</code></a></td><td>Asset</td><td>Set key value</td></tr><tr><td><a href="#canremovekeyvalueinuserassets"><code>CanRemoveKeyValueInUserAssets</code></a></td><td>Asset</td><td>Remove key value</td></tr><tr><td><a href="#cantransferuserassets"><code>CanTransferUserAssets</code></a></td><td>Asset</td><td>Transfer</td></tr><tr><td><a href="#cantransferonlyfixednumberoftimesperperiod"><code>CanTransferOnlyFixedNumberOfTimesPerPeriod</code></a></td><td>Asset</td><td>Transfer</td></tr><tr><td><a href="#canmintuserassetdefinitions"><code>CanMintUserAssetDefinitions</code></a></td><td>Asset Definition</td><td>Mint</td></tr><tr><td><a href="#canburnassetwithdefinition"><code>CanBurnAssetWithDefinition</code></a></td><td>Asset Definition</td><td>Burn</td></tr><tr><td><a href="#canunregisterassetwithdefinition"><code>CanUnregisterAssetWithDefinition</code></a></td><td>Asset Definition</td><td>Unregister</td></tr><tr><td><a href="#cansetkeyvalueinassetdefinition"><code>CanSetKeyValueInAssetDefinition</code></a></td><td>Asset Definition</td><td>Set key value</td></tr><tr><td><a href="#canremovekeyvalueinassetdefinition"><code>CanRemoveKeyValueInAssetDefinition</code></a></td><td>Asset Definition</td><td>Remove key value</td></tr><tr><td><a href="#canregisterdomains"><code>CanRegisterDomains</code></a></td><td>Domain</td><td>Register</td></tr></tbody></table><div class="info custom-block"><p class="custom-block-title">INFO</p><p>The way permission work in Iroha 2 is subject to change. Note that there won&#39;t be pre-configured permissions in the future.</p></div><h3 id="canmintuserassetdefinitions" tabindex="-1"><code>CanMintUserAssetDefinitions</code> <a class="header-anchor" href="#canmintuserassetdefinitions" aria-label="Permalink to &quot;\`CanMintUserAssetDefinitions\`&quot;">​</a></h3><p>With <code>CanMintUserAssetDefinitions</code>, a user can register and mint assets with the corresponding asset definition.</p><div class="language-rust vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">rust</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">let</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">mut</span><span style="color:#E1E4E8;"> genesis </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">RawGenesisBlock</span><span style="color:#F97583;">::</span><span style="color:#B392F0;">new</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#9ECBFF;">&quot;alice&quot;</span><span style="color:#F97583;">.</span><span style="color:#B392F0;">parse</span><span style="color:#E1E4E8;">(),</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#9ECBFF;">&quot;wonderland&quot;</span><span style="color:#F97583;">.</span><span style="color:#B392F0;">parse</span><span style="color:#E1E4E8;">(),</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">get_key_pair</span><span style="color:#E1E4E8;">()</span><span style="color:#F97583;">.</span><span style="color:#B392F0;">public_key</span><span style="color:#E1E4E8;">()</span><span style="color:#F97583;">.</span><span style="color:#B392F0;">clone</span><span style="color:#E1E4E8;">(),</span></span>
<span class="line"><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#F97583;">let</span><span style="color:#E1E4E8;"> rose_definition_id </span><span style="color:#F97583;">=</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">AssetDefinitionId</span><span style="color:#F97583;">::</span><span style="color:#B392F0;">from_str</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;rose#wonderland&quot;</span><span style="color:#E1E4E8;">)</span><span style="color:#F97583;">?</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#F97583;">let</span><span style="color:#E1E4E8;"> alice_id </span><span style="color:#F97583;">=</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">AccountId</span><span style="color:#F97583;">::</span><span style="color:#B392F0;">from_str</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;alice@wonderland&quot;</span><span style="color:#E1E4E8;">)</span><span style="color:#F97583;">?</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">// Create a new \`CanMintUserAssetDefinitions\` permission token</span></span>
<span class="line"><span style="color:#6A737D;">// to mint rose assets (\`rose_definition_id\`)</span></span>
<span class="line"><span style="color:#F97583;">let</span><span style="color:#E1E4E8;"> mint_rose_permission</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">PermissionToken</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">CanMintUserAssetDefinitions</span><span style="color:#F97583;">::</span><span style="color:#B392F0;">new</span><span style="color:#E1E4E8;">(rose_definition_id)</span><span style="color:#F97583;">.</span><span style="color:#B392F0;">into</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">// Grant Alice permission to mint rose assets</span></span>
<span class="line"><span style="color:#E1E4E8;">genesis</span><span style="color:#F97583;">.</span><span style="color:#E1E4E8;">transactions[</span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">]</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">.</span><span style="color:#E1E4E8;">isi</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">.</span><span style="color:#B392F0;">push</span><span style="color:#E1E4E8;">(</span><span style="color:#B392F0;">GrantBox</span><span style="color:#F97583;">::</span><span style="color:#B392F0;">new</span><span style="color:#E1E4E8;">(mint_rose_permission, alice_id)</span><span style="color:#F97583;">.</span><span style="color:#B392F0;">into</span><span style="color:#E1E4E8;">());</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">let</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">mut</span><span style="color:#24292E;"> genesis </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">RawGenesisBlock</span><span style="color:#D73A49;">::</span><span style="color:#6F42C1;">new</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#032F62;">&quot;alice&quot;</span><span style="color:#D73A49;">.</span><span style="color:#6F42C1;">parse</span><span style="color:#24292E;">(),</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#032F62;">&quot;wonderland&quot;</span><span style="color:#D73A49;">.</span><span style="color:#6F42C1;">parse</span><span style="color:#24292E;">(),</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">get_key_pair</span><span style="color:#24292E;">()</span><span style="color:#D73A49;">.</span><span style="color:#6F42C1;">public_key</span><span style="color:#24292E;">()</span><span style="color:#D73A49;">.</span><span style="color:#6F42C1;">clone</span><span style="color:#24292E;">(),</span></span>
<span class="line"><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#D73A49;">let</span><span style="color:#24292E;"> rose_definition_id </span><span style="color:#D73A49;">=</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">AssetDefinitionId</span><span style="color:#D73A49;">::</span><span style="color:#6F42C1;">from_str</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;rose#wonderland&quot;</span><span style="color:#24292E;">)</span><span style="color:#D73A49;">?</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#D73A49;">let</span><span style="color:#24292E;"> alice_id </span><span style="color:#D73A49;">=</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">AccountId</span><span style="color:#D73A49;">::</span><span style="color:#6F42C1;">from_str</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;alice@wonderland&quot;</span><span style="color:#24292E;">)</span><span style="color:#D73A49;">?</span><span style="color:#24292E;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">// Create a new \`CanMintUserAssetDefinitions\` permission token</span></span>
<span class="line"><span style="color:#6A737D;">// to mint rose assets (\`rose_definition_id\`)</span></span>
<span class="line"><span style="color:#D73A49;">let</span><span style="color:#24292E;"> mint_rose_permission</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">PermissionToken</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">CanMintUserAssetDefinitions</span><span style="color:#D73A49;">::</span><span style="color:#6F42C1;">new</span><span style="color:#24292E;">(rose_definition_id)</span><span style="color:#D73A49;">.</span><span style="color:#6F42C1;">into</span><span style="color:#24292E;">();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">// Grant Alice permission to mint rose assets</span></span>
<span class="line"><span style="color:#24292E;">genesis</span><span style="color:#D73A49;">.</span><span style="color:#24292E;">transactions[</span><span style="color:#005CC5;">0</span><span style="color:#24292E;">]</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">.</span><span style="color:#24292E;">isi</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">.</span><span style="color:#6F42C1;">push</span><span style="color:#24292E;">(</span><span style="color:#6F42C1;">GrantBox</span><span style="color:#D73A49;">::</span><span style="color:#6F42C1;">new</span><span style="color:#24292E;">(mint_rose_permission, alice_id)</span><span style="color:#D73A49;">.</span><span style="color:#6F42C1;">into</span><span style="color:#24292E;">());</span></span></code></pre></div><h3 id="canburnassetwithdefinition" tabindex="-1"><code>CanBurnAssetWithDefinition</code> <a class="header-anchor" href="#canburnassetwithdefinition" aria-label="Permalink to &quot;\`CanBurnAssetWithDefinition\`&quot;">​</a></h3><p>With <code>CanBurnAssetWithDefinition</code> permission token, a user can burn and unregister assets with the corresponding asset definition.</p><div class="language-rust vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">rust</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">let</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">mut</span><span style="color:#E1E4E8;"> genesis </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">RawGenesisBlock</span><span style="color:#F97583;">::</span><span style="color:#B392F0;">new</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#9ECBFF;">&quot;alice&quot;</span><span style="color:#F97583;">.</span><span style="color:#B392F0;">parse</span><span style="color:#E1E4E8;">(),</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#9ECBFF;">&quot;wonderland&quot;</span><span style="color:#F97583;">.</span><span style="color:#B392F0;">parse</span><span style="color:#E1E4E8;">(),</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">get_key_pair</span><span style="color:#E1E4E8;">()</span><span style="color:#F97583;">.</span><span style="color:#B392F0;">public_key</span><span style="color:#E1E4E8;">()</span><span style="color:#F97583;">.</span><span style="color:#B392F0;">clone</span><span style="color:#E1E4E8;">(),</span></span>
<span class="line"><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#F97583;">let</span><span style="color:#E1E4E8;"> rose_definition_id </span><span style="color:#F97583;">=</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">AssetDefinitionId</span><span style="color:#F97583;">::</span><span style="color:#B392F0;">from_str</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;rose#wonderland&quot;</span><span style="color:#E1E4E8;">)</span><span style="color:#F97583;">?</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#F97583;">let</span><span style="color:#E1E4E8;"> alice_id </span><span style="color:#F97583;">=</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">AccountId</span><span style="color:#F97583;">::</span><span style="color:#B392F0;">from_str</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;alice@wonderland&quot;</span><span style="color:#E1E4E8;">)</span><span style="color:#F97583;">?</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">// Create a new \`CanBurnAssetWithDefinition\` permission token</span></span>
<span class="line"><span style="color:#6A737D;">// to burn rose assets (\`rose_definition_id\`)</span></span>
<span class="line"><span style="color:#F97583;">let</span><span style="color:#E1E4E8;"> burn_rose_permission</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">PermissionToken</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">CanBurnAssetWithDefinition</span><span style="color:#F97583;">::</span><span style="color:#B392F0;">new</span><span style="color:#E1E4E8;">(rose_definition_id)</span><span style="color:#F97583;">.</span><span style="color:#B392F0;">into</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">// Grant Alice permission to burn rose assets</span></span>
<span class="line"><span style="color:#E1E4E8;">genesis</span><span style="color:#F97583;">.</span><span style="color:#E1E4E8;">transactions[</span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">]</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">.</span><span style="color:#E1E4E8;">isi</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">.</span><span style="color:#B392F0;">push</span><span style="color:#E1E4E8;">(</span><span style="color:#B392F0;">GrantBox</span><span style="color:#F97583;">::</span><span style="color:#B392F0;">new</span><span style="color:#E1E4E8;">(burn_rose_permission, alice_id)</span><span style="color:#F97583;">.</span><span style="color:#B392F0;">into</span><span style="color:#E1E4E8;">());</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">let</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">mut</span><span style="color:#24292E;"> genesis </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">RawGenesisBlock</span><span style="color:#D73A49;">::</span><span style="color:#6F42C1;">new</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#032F62;">&quot;alice&quot;</span><span style="color:#D73A49;">.</span><span style="color:#6F42C1;">parse</span><span style="color:#24292E;">(),</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#032F62;">&quot;wonderland&quot;</span><span style="color:#D73A49;">.</span><span style="color:#6F42C1;">parse</span><span style="color:#24292E;">(),</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">get_key_pair</span><span style="color:#24292E;">()</span><span style="color:#D73A49;">.</span><span style="color:#6F42C1;">public_key</span><span style="color:#24292E;">()</span><span style="color:#D73A49;">.</span><span style="color:#6F42C1;">clone</span><span style="color:#24292E;">(),</span></span>
<span class="line"><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#D73A49;">let</span><span style="color:#24292E;"> rose_definition_id </span><span style="color:#D73A49;">=</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">AssetDefinitionId</span><span style="color:#D73A49;">::</span><span style="color:#6F42C1;">from_str</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;rose#wonderland&quot;</span><span style="color:#24292E;">)</span><span style="color:#D73A49;">?</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#D73A49;">let</span><span style="color:#24292E;"> alice_id </span><span style="color:#D73A49;">=</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">AccountId</span><span style="color:#D73A49;">::</span><span style="color:#6F42C1;">from_str</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;alice@wonderland&quot;</span><span style="color:#24292E;">)</span><span style="color:#D73A49;">?</span><span style="color:#24292E;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">// Create a new \`CanBurnAssetWithDefinition\` permission token</span></span>
<span class="line"><span style="color:#6A737D;">// to burn rose assets (\`rose_definition_id\`)</span></span>
<span class="line"><span style="color:#D73A49;">let</span><span style="color:#24292E;"> burn_rose_permission</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">PermissionToken</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">CanBurnAssetWithDefinition</span><span style="color:#D73A49;">::</span><span style="color:#6F42C1;">new</span><span style="color:#24292E;">(rose_definition_id)</span><span style="color:#D73A49;">.</span><span style="color:#6F42C1;">into</span><span style="color:#24292E;">();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">// Grant Alice permission to burn rose assets</span></span>
<span class="line"><span style="color:#24292E;">genesis</span><span style="color:#D73A49;">.</span><span style="color:#24292E;">transactions[</span><span style="color:#005CC5;">0</span><span style="color:#24292E;">]</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">.</span><span style="color:#24292E;">isi</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">.</span><span style="color:#6F42C1;">push</span><span style="color:#24292E;">(</span><span style="color:#6F42C1;">GrantBox</span><span style="color:#D73A49;">::</span><span style="color:#6F42C1;">new</span><span style="color:#24292E;">(burn_rose_permission, alice_id)</span><span style="color:#D73A49;">.</span><span style="color:#6F42C1;">into</span><span style="color:#24292E;">());</span></span></code></pre></div><h3 id="canburnuserassets" tabindex="-1"><code>CanBurnUserAssets</code> <a class="header-anchor" href="#canburnuserassets" aria-label="Permalink to &quot;\`CanBurnUserAssets\`&quot;">​</a></h3><p>With <code>CanBurnUserAssets</code> permission token, a user can burn the specified asset.</p><div class="language-rust vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">rust</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">let</span><span style="color:#E1E4E8;"> alice_id </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">AccountId</span><span style="color:#F97583;">::</span><span style="color:#B392F0;">from_str</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;alice@test&quot;</span><span style="color:#E1E4E8;">)</span><span style="color:#F97583;">?</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#F97583;">let</span><span style="color:#E1E4E8;"> bob_id </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">AccountId</span><span style="color:#F97583;">::</span><span style="color:#B392F0;">from_str</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;bob@test&quot;</span><span style="color:#E1E4E8;">)</span><span style="color:#F97583;">?</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#F97583;">let</span><span style="color:#E1E4E8;"> alice_xor_id </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">AssetId</span><span style="color:#F97583;">::</span><span style="color:#B392F0;">new</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">AssetDefinitionId</span><span style="color:#F97583;">::</span><span style="color:#B392F0;">from_str</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;xor#test&quot;</span><span style="color:#E1E4E8;">)</span><span style="color:#F97583;">?</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">AccountId</span><span style="color:#F97583;">::</span><span style="color:#B392F0;">from_str</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;alice@test&quot;</span><span style="color:#E1E4E8;">)</span><span style="color:#F97583;">?</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">// Create a new \`CanBurnUserAssets\` permission token</span></span>
<span class="line"><span style="color:#6A737D;">// that allows burning \`alice_xor_id\` asset</span></span>
<span class="line"><span style="color:#F97583;">let</span><span style="color:#E1E4E8;"> permission_token_to_alice</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">PermissionToken</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">burn</span><span style="color:#F97583;">::</span><span style="color:#B392F0;">CanBurnUserAssets</span><span style="color:#F97583;">::</span><span style="color:#B392F0;">new</span><span style="color:#E1E4E8;">(alice_xor_id)</span><span style="color:#F97583;">.</span><span style="color:#B392F0;">into</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">// Create an instruction that grants Bob permission to burn \`alice_xor_id\` asset</span></span>
<span class="line"><span style="color:#F97583;">let</span><span style="color:#E1E4E8;"> grant </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Instruction</span><span style="color:#F97583;">::</span><span style="color:#B392F0;">Grant</span><span style="color:#E1E4E8;">(</span><span style="color:#B392F0;">GrantBox</span><span style="color:#F97583;">::</span><span style="color:#B392F0;">new</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">    permission_token_to_alice,</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">IdBox</span><span style="color:#F97583;">::</span><span style="color:#B392F0;">AccountId</span><span style="color:#E1E4E8;">(bob_id),</span></span>
<span class="line"><span style="color:#E1E4E8;">));</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">let</span><span style="color:#24292E;"> alice_id </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">AccountId</span><span style="color:#D73A49;">::</span><span style="color:#6F42C1;">from_str</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;alice@test&quot;</span><span style="color:#24292E;">)</span><span style="color:#D73A49;">?</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#D73A49;">let</span><span style="color:#24292E;"> bob_id </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">AccountId</span><span style="color:#D73A49;">::</span><span style="color:#6F42C1;">from_str</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;bob@test&quot;</span><span style="color:#24292E;">)</span><span style="color:#D73A49;">?</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#D73A49;">let</span><span style="color:#24292E;"> alice_xor_id </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">AssetId</span><span style="color:#D73A49;">::</span><span style="color:#6F42C1;">new</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">AssetDefinitionId</span><span style="color:#D73A49;">::</span><span style="color:#6F42C1;">from_str</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;xor#test&quot;</span><span style="color:#24292E;">)</span><span style="color:#D73A49;">?</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">AccountId</span><span style="color:#D73A49;">::</span><span style="color:#6F42C1;">from_str</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;alice@test&quot;</span><span style="color:#24292E;">)</span><span style="color:#D73A49;">?</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">// Create a new \`CanBurnUserAssets\` permission token</span></span>
<span class="line"><span style="color:#6A737D;">// that allows burning \`alice_xor_id\` asset</span></span>
<span class="line"><span style="color:#D73A49;">let</span><span style="color:#24292E;"> permission_token_to_alice</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">PermissionToken</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">burn</span><span style="color:#D73A49;">::</span><span style="color:#6F42C1;">CanBurnUserAssets</span><span style="color:#D73A49;">::</span><span style="color:#6F42C1;">new</span><span style="color:#24292E;">(alice_xor_id)</span><span style="color:#D73A49;">.</span><span style="color:#6F42C1;">into</span><span style="color:#24292E;">();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">// Create an instruction that grants Bob permission to burn \`alice_xor_id\` asset</span></span>
<span class="line"><span style="color:#D73A49;">let</span><span style="color:#24292E;"> grant </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Instruction</span><span style="color:#D73A49;">::</span><span style="color:#6F42C1;">Grant</span><span style="color:#24292E;">(</span><span style="color:#6F42C1;">GrantBox</span><span style="color:#D73A49;">::</span><span style="color:#6F42C1;">new</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">    permission_token_to_alice,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">IdBox</span><span style="color:#D73A49;">::</span><span style="color:#6F42C1;">AccountId</span><span style="color:#24292E;">(bob_id),</span></span>
<span class="line"><span style="color:#24292E;">));</span></span></code></pre></div><h3 id="canunregisterassetwithdefinition" tabindex="-1"><code>CanUnregisterAssetWithDefinition</code> <a class="header-anchor" href="#canunregisterassetwithdefinition" aria-label="Permalink to &quot;\`CanUnregisterAssetWithDefinition\`&quot;">​</a></h3><p>With <code>CanUnregisterAssetWithDefinition</code> permission token, a user can unregister assets with the corresponding asset definition.</p><div class="language-rust vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">rust</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">let</span><span style="color:#E1E4E8;"> alice_id </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">AccountId</span><span style="color:#F97583;">::</span><span style="color:#B392F0;">from_str</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;alice@test&quot;</span><span style="color:#E1E4E8;">)</span><span style="color:#F97583;">?</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#F97583;">let</span><span style="color:#E1E4E8;"> bob_id </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">AccountId</span><span style="color:#F97583;">::</span><span style="color:#B392F0;">from_str</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;bob@test&quot;</span><span style="color:#E1E4E8;">)</span><span style="color:#F97583;">?</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#F97583;">let</span><span style="color:#E1E4E8;"> xor_id </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">AssetDefinitionId</span><span style="color:#F97583;">::</span><span style="color:#B392F0;">from_str</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;xor#test&quot;</span><span style="color:#E1E4E8;">)</span><span style="color:#F97583;">?</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">// Create a new \`CanUnregisterAssetWithDefinition\` permission token</span></span>
<span class="line"><span style="color:#6A737D;">// that allows unregistering \`xor_id\` asset</span></span>
<span class="line"><span style="color:#F97583;">let</span><span style="color:#E1E4E8;"> permission_token_to_alice</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">PermissionToken</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">unregister</span><span style="color:#F97583;">::</span><span style="color:#B392F0;">CanUnregisterAssetWithDefinition</span><span style="color:#F97583;">::</span><span style="color:#B392F0;">new</span><span style="color:#E1E4E8;">(xor_id)</span><span style="color:#F97583;">.</span><span style="color:#B392F0;">into</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">// Create an instruction that grants Bob permission to unregister \`xor_id\` asset</span></span>
<span class="line"><span style="color:#F97583;">let</span><span style="color:#E1E4E8;"> grant </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Instruction</span><span style="color:#F97583;">::</span><span style="color:#B392F0;">Grant</span><span style="color:#E1E4E8;">(</span><span style="color:#B392F0;">GrantBox</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">    permission_token_to_alice</span><span style="color:#F97583;">.</span><span style="color:#B392F0;">into</span><span style="color:#E1E4E8;">(),</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">IdBox</span><span style="color:#F97583;">::</span><span style="color:#B392F0;">AccountId</span><span style="color:#E1E4E8;">(bob_id)</span><span style="color:#F97583;">.</span><span style="color:#B392F0;">into</span><span style="color:#E1E4E8;">(),</span></span>
<span class="line"><span style="color:#E1E4E8;">});</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">let</span><span style="color:#24292E;"> alice_id </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">AccountId</span><span style="color:#D73A49;">::</span><span style="color:#6F42C1;">from_str</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;alice@test&quot;</span><span style="color:#24292E;">)</span><span style="color:#D73A49;">?</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#D73A49;">let</span><span style="color:#24292E;"> bob_id </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">AccountId</span><span style="color:#D73A49;">::</span><span style="color:#6F42C1;">from_str</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;bob@test&quot;</span><span style="color:#24292E;">)</span><span style="color:#D73A49;">?</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#D73A49;">let</span><span style="color:#24292E;"> xor_id </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">AssetDefinitionId</span><span style="color:#D73A49;">::</span><span style="color:#6F42C1;">from_str</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;xor#test&quot;</span><span style="color:#24292E;">)</span><span style="color:#D73A49;">?</span><span style="color:#24292E;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">// Create a new \`CanUnregisterAssetWithDefinition\` permission token</span></span>
<span class="line"><span style="color:#6A737D;">// that allows unregistering \`xor_id\` asset</span></span>
<span class="line"><span style="color:#D73A49;">let</span><span style="color:#24292E;"> permission_token_to_alice</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">PermissionToken</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">unregister</span><span style="color:#D73A49;">::</span><span style="color:#6F42C1;">CanUnregisterAssetWithDefinition</span><span style="color:#D73A49;">::</span><span style="color:#6F42C1;">new</span><span style="color:#24292E;">(xor_id)</span><span style="color:#D73A49;">.</span><span style="color:#6F42C1;">into</span><span style="color:#24292E;">();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">// Create an instruction that grants Bob permission to unregister \`xor_id\` asset</span></span>
<span class="line"><span style="color:#D73A49;">let</span><span style="color:#24292E;"> grant </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Instruction</span><span style="color:#D73A49;">::</span><span style="color:#6F42C1;">Grant</span><span style="color:#24292E;">(</span><span style="color:#6F42C1;">GrantBox</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">    permission_token_to_alice</span><span style="color:#D73A49;">.</span><span style="color:#6F42C1;">into</span><span style="color:#24292E;">(),</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">IdBox</span><span style="color:#D73A49;">::</span><span style="color:#6F42C1;">AccountId</span><span style="color:#24292E;">(bob_id)</span><span style="color:#D73A49;">.</span><span style="color:#6F42C1;">into</span><span style="color:#24292E;">(),</span></span>
<span class="line"><span style="color:#24292E;">});</span></span></code></pre></div><h3 id="cantransferuserassets" tabindex="-1"><code>CanTransferUserAssets</code> <a class="header-anchor" href="#cantransferuserassets" aria-label="Permalink to &quot;\`CanTransferUserAssets\`&quot;">​</a></h3><p>With <code>CanTransferUserAssets</code> permission token, a user can transfer the specified asset.</p><div class="language-rust vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">rust</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">let</span><span style="color:#E1E4E8;"> alice_id </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">AccountId</span><span style="color:#F97583;">::</span><span style="color:#B392F0;">from_str</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;alice@test&quot;</span><span style="color:#E1E4E8;">)</span><span style="color:#F97583;">?</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#F97583;">let</span><span style="color:#E1E4E8;"> bob_id </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">AccountId</span><span style="color:#F97583;">::</span><span style="color:#B392F0;">from_str</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;bob@test&quot;</span><span style="color:#E1E4E8;">)</span><span style="color:#F97583;">?</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#F97583;">let</span><span style="color:#E1E4E8;"> alice_xor_id </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">AssetId</span><span style="color:#F97583;">::</span><span style="color:#B392F0;">new</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">AssetDefinitionId</span><span style="color:#F97583;">::</span><span style="color:#B392F0;">from_str</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;xor#test&quot;</span><span style="color:#E1E4E8;">)</span><span style="color:#F97583;">?</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">AccountId</span><span style="color:#F97583;">::</span><span style="color:#B392F0;">from_str</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;alice@test&quot;</span><span style="color:#E1E4E8;">)</span><span style="color:#F97583;">?</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">// Create a new \`CanTransferUserAssets\` permission token</span></span>
<span class="line"><span style="color:#6A737D;">// that allows to transfer \`alice_xor_id\` asset</span></span>
<span class="line"><span style="color:#F97583;">let</span><span style="color:#E1E4E8;"> permission_token_to_alice</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">PermissionToken</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">transfer</span><span style="color:#F97583;">::</span><span style="color:#B392F0;">CanTransferUserAssets</span><span style="color:#F97583;">::</span><span style="color:#B392F0;">new</span><span style="color:#E1E4E8;">(alice_xor_id)</span><span style="color:#F97583;">.</span><span style="color:#B392F0;">into</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">// Create an instruction that grants Bob permission to transfer \`alice_xor_id\` asset</span></span>
<span class="line"><span style="color:#F97583;">let</span><span style="color:#E1E4E8;"> grant </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Instruction</span><span style="color:#F97583;">::</span><span style="color:#B392F0;">Grant</span><span style="color:#E1E4E8;">(</span><span style="color:#B392F0;">GrantBox</span><span style="color:#F97583;">::</span><span style="color:#B392F0;">new</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">    permission_token_to_alice,</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">IdBox</span><span style="color:#F97583;">::</span><span style="color:#B392F0;">AccountId</span><span style="color:#E1E4E8;">(bob_id),</span></span>
<span class="line"><span style="color:#E1E4E8;">));</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">let</span><span style="color:#24292E;"> alice_id </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">AccountId</span><span style="color:#D73A49;">::</span><span style="color:#6F42C1;">from_str</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;alice@test&quot;</span><span style="color:#24292E;">)</span><span style="color:#D73A49;">?</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#D73A49;">let</span><span style="color:#24292E;"> bob_id </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">AccountId</span><span style="color:#D73A49;">::</span><span style="color:#6F42C1;">from_str</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;bob@test&quot;</span><span style="color:#24292E;">)</span><span style="color:#D73A49;">?</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#D73A49;">let</span><span style="color:#24292E;"> alice_xor_id </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">AssetId</span><span style="color:#D73A49;">::</span><span style="color:#6F42C1;">new</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">AssetDefinitionId</span><span style="color:#D73A49;">::</span><span style="color:#6F42C1;">from_str</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;xor#test&quot;</span><span style="color:#24292E;">)</span><span style="color:#D73A49;">?</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">AccountId</span><span style="color:#D73A49;">::</span><span style="color:#6F42C1;">from_str</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;alice@test&quot;</span><span style="color:#24292E;">)</span><span style="color:#D73A49;">?</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">// Create a new \`CanTransferUserAssets\` permission token</span></span>
<span class="line"><span style="color:#6A737D;">// that allows to transfer \`alice_xor_id\` asset</span></span>
<span class="line"><span style="color:#D73A49;">let</span><span style="color:#24292E;"> permission_token_to_alice</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">PermissionToken</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">transfer</span><span style="color:#D73A49;">::</span><span style="color:#6F42C1;">CanTransferUserAssets</span><span style="color:#D73A49;">::</span><span style="color:#6F42C1;">new</span><span style="color:#24292E;">(alice_xor_id)</span><span style="color:#D73A49;">.</span><span style="color:#6F42C1;">into</span><span style="color:#24292E;">();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">// Create an instruction that grants Bob permission to transfer \`alice_xor_id\` asset</span></span>
<span class="line"><span style="color:#D73A49;">let</span><span style="color:#24292E;"> grant </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Instruction</span><span style="color:#D73A49;">::</span><span style="color:#6F42C1;">Grant</span><span style="color:#24292E;">(</span><span style="color:#6F42C1;">GrantBox</span><span style="color:#D73A49;">::</span><span style="color:#6F42C1;">new</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">    permission_token_to_alice,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">IdBox</span><span style="color:#D73A49;">::</span><span style="color:#6F42C1;">AccountId</span><span style="color:#24292E;">(bob_id),</span></span>
<span class="line"><span style="color:#24292E;">));</span></span></code></pre></div><h3 id="cantransferonlyfixednumberoftimesperperiod" tabindex="-1"><code>CanTransferOnlyFixedNumberOfTimesPerPeriod</code> <a class="header-anchor" href="#cantransferonlyfixednumberoftimesperperiod" aria-label="Permalink to &quot;\`CanTransferOnlyFixedNumberOfTimesPerPeriod\`&quot;">​</a></h3><p>With <code>CanTransferOnlyFixedNumberOfTimesPerPeriod</code> permission token, a user can transfer assets only a fixed number of times per some time period.</p><div class="language-rust vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">rust</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">PERIOD_MS</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">u64</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">5000</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">COUNT</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">u32</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">2</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">// Create a new \`CanTransferOnlyFixedNumberOfTimesPerPeriod\` permission token</span></span>
<span class="line"><span style="color:#6A737D;">// that limits the number of transfer to 2 per 5000 ms.</span></span>
<span class="line"><span style="color:#F97583;">let</span><span style="color:#E1E4E8;"> permission_token </span><span style="color:#F97583;">=</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">transfer</span><span style="color:#F97583;">::</span><span style="color:#B392F0;">CanTransferOnlyFixedNumberOfTimesPerPeriod</span><span style="color:#F97583;">::</span><span style="color:#B392F0;">new</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">PERIOD_MS</span><span style="color:#F97583;">.</span><span style="color:#B392F0;">into</span><span style="color:#E1E4E8;">(), </span><span style="color:#79B8FF;">COUNT</span><span style="color:#E1E4E8;">);</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">PERIOD_MS</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">u64</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">5000</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">COUNT</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">u32</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">2</span><span style="color:#24292E;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">// Create a new \`CanTransferOnlyFixedNumberOfTimesPerPeriod\` permission token</span></span>
<span class="line"><span style="color:#6A737D;">// that limits the number of transfer to 2 per 5000 ms.</span></span>
<span class="line"><span style="color:#D73A49;">let</span><span style="color:#24292E;"> permission_token </span><span style="color:#D73A49;">=</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">transfer</span><span style="color:#D73A49;">::</span><span style="color:#6F42C1;">CanTransferOnlyFixedNumberOfTimesPerPeriod</span><span style="color:#D73A49;">::</span><span style="color:#6F42C1;">new</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">PERIOD_MS</span><span style="color:#D73A49;">.</span><span style="color:#6F42C1;">into</span><span style="color:#24292E;">(), </span><span style="color:#005CC5;">COUNT</span><span style="color:#24292E;">);</span></span></code></pre></div><h3 id="cansetkeyvalueinuserassets" tabindex="-1"><code>CanSetKeyValueInUserAssets</code> <a class="header-anchor" href="#cansetkeyvalueinuserassets" aria-label="Permalink to &quot;\`CanSetKeyValueInUserAssets\`&quot;">​</a></h3><p>With <code>CanSetKeyValueInUserAssets</code> permission token, a user can set key value in the specified asset.</p><div class="language-rust vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">rust</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">let</span><span style="color:#E1E4E8;"> bob_id </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">AccountId</span><span style="color:#F97583;">::</span><span style="color:#B392F0;">from_str</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;bob@test&quot;</span><span style="color:#E1E4E8;">)</span><span style="color:#F97583;">?</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#F97583;">let</span><span style="color:#E1E4E8;"> alice_id </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">AccountId</span><span style="color:#F97583;">::</span><span style="color:#B392F0;">from_str</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;alice@test&quot;</span><span style="color:#E1E4E8;">)</span><span style="color:#F97583;">?</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#F97583;">let</span><span style="color:#E1E4E8;"> alice_xor_id </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">AssetId</span><span style="color:#F97583;">::</span><span style="color:#B392F0;">new</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">AssetDefinitionId</span><span style="color:#F97583;">::</span><span style="color:#B392F0;">from_str</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;xor#test&quot;</span><span style="color:#E1E4E8;">)</span><span style="color:#F97583;">?</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">AccountId</span><span style="color:#F97583;">::</span><span style="color:#B392F0;">from_str</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;alice@test&quot;</span><span style="color:#E1E4E8;">)</span><span style="color:#F97583;">?</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">// Create a new \`CanSetKeyValueInUserAssets\` permission token</span></span>
<span class="line"><span style="color:#6A737D;">// that allows to set key value in \`alice_xor_id\` asset</span></span>
<span class="line"><span style="color:#F97583;">let</span><span style="color:#E1E4E8;"> permission_to_set_key_value_in_xor</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">PermissionToken</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">key_value</span><span style="color:#F97583;">::</span><span style="color:#B392F0;">CanSetKeyValueInUserAssets</span><span style="color:#F97583;">::</span><span style="color:#B392F0;">new</span><span style="color:#E1E4E8;">(alice_xor_id)</span><span style="color:#F97583;">.</span><span style="color:#B392F0;">into</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">// Create an instruction that grants Bob permission</span></span>
<span class="line"><span style="color:#6A737D;">// to set key value in \`alice_xor_id\` asset</span></span>
<span class="line"><span style="color:#F97583;">let</span><span style="color:#E1E4E8;"> grant </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Instruction</span><span style="color:#F97583;">::</span><span style="color:#B392F0;">Grant</span><span style="color:#E1E4E8;">(</span><span style="color:#B392F0;">GrantBox</span><span style="color:#F97583;">::</span><span style="color:#B392F0;">new</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">    permission_to_set_key_value_in_xor,</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">IdBox</span><span style="color:#F97583;">::</span><span style="color:#B392F0;">AccountId</span><span style="color:#E1E4E8;">(bob_id),</span></span>
<span class="line"><span style="color:#E1E4E8;">));</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">let</span><span style="color:#24292E;"> bob_id </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">AccountId</span><span style="color:#D73A49;">::</span><span style="color:#6F42C1;">from_str</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;bob@test&quot;</span><span style="color:#24292E;">)</span><span style="color:#D73A49;">?</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#D73A49;">let</span><span style="color:#24292E;"> alice_id </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">AccountId</span><span style="color:#D73A49;">::</span><span style="color:#6F42C1;">from_str</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;alice@test&quot;</span><span style="color:#24292E;">)</span><span style="color:#D73A49;">?</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#D73A49;">let</span><span style="color:#24292E;"> alice_xor_id </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">AssetId</span><span style="color:#D73A49;">::</span><span style="color:#6F42C1;">new</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">AssetDefinitionId</span><span style="color:#D73A49;">::</span><span style="color:#6F42C1;">from_str</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;xor#test&quot;</span><span style="color:#24292E;">)</span><span style="color:#D73A49;">?</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">AccountId</span><span style="color:#D73A49;">::</span><span style="color:#6F42C1;">from_str</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;alice@test&quot;</span><span style="color:#24292E;">)</span><span style="color:#D73A49;">?</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">// Create a new \`CanSetKeyValueInUserAssets\` permission token</span></span>
<span class="line"><span style="color:#6A737D;">// that allows to set key value in \`alice_xor_id\` asset</span></span>
<span class="line"><span style="color:#D73A49;">let</span><span style="color:#24292E;"> permission_to_set_key_value_in_xor</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">PermissionToken</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">key_value</span><span style="color:#D73A49;">::</span><span style="color:#6F42C1;">CanSetKeyValueInUserAssets</span><span style="color:#D73A49;">::</span><span style="color:#6F42C1;">new</span><span style="color:#24292E;">(alice_xor_id)</span><span style="color:#D73A49;">.</span><span style="color:#6F42C1;">into</span><span style="color:#24292E;">();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">// Create an instruction that grants Bob permission</span></span>
<span class="line"><span style="color:#6A737D;">// to set key value in \`alice_xor_id\` asset</span></span>
<span class="line"><span style="color:#D73A49;">let</span><span style="color:#24292E;"> grant </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Instruction</span><span style="color:#D73A49;">::</span><span style="color:#6F42C1;">Grant</span><span style="color:#24292E;">(</span><span style="color:#6F42C1;">GrantBox</span><span style="color:#D73A49;">::</span><span style="color:#6F42C1;">new</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">    permission_to_set_key_value_in_xor,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">IdBox</span><span style="color:#D73A49;">::</span><span style="color:#6F42C1;">AccountId</span><span style="color:#24292E;">(bob_id),</span></span>
<span class="line"><span style="color:#24292E;">));</span></span></code></pre></div><h3 id="canremovekeyvalueinuserassets" tabindex="-1"><code>CanRemoveKeyValueInUserAssets</code> <a class="header-anchor" href="#canremovekeyvalueinuserassets" aria-label="Permalink to &quot;\`CanRemoveKeyValueInUserAssets\`&quot;">​</a></h3><p>With <code>CanRemoveKeyValueInUserAssets</code> permission token, a user can remove key value in the specified asset.</p><div class="language-rust vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">rust</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">let</span><span style="color:#E1E4E8;"> bob_id </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">AccountId</span><span style="color:#F97583;">::</span><span style="color:#B392F0;">from_str</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;bob@test&quot;</span><span style="color:#E1E4E8;">)</span><span style="color:#F97583;">?</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#F97583;">let</span><span style="color:#E1E4E8;"> alice_id </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">AccountId</span><span style="color:#F97583;">::</span><span style="color:#B392F0;">from_str</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;alice@test&quot;</span><span style="color:#E1E4E8;">)</span><span style="color:#F97583;">?</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#F97583;">let</span><span style="color:#E1E4E8;"> alice_xor_id </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">AssetId</span><span style="color:#F97583;">::</span><span style="color:#B392F0;">new</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">AssetDefinitionId</span><span style="color:#F97583;">::</span><span style="color:#B392F0;">from_str</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;xor#test&quot;</span><span style="color:#E1E4E8;">)</span><span style="color:#F97583;">?</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">AccountId</span><span style="color:#F97583;">::</span><span style="color:#B392F0;">from_str</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;alice@test&quot;</span><span style="color:#E1E4E8;">)</span><span style="color:#F97583;">?</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">// Create a new \`CanRemoveKeyValueInUserAssets\` permission token</span></span>
<span class="line"><span style="color:#6A737D;">// that allows to remove key value from \`alice_xor_id\` asset</span></span>
<span class="line"><span style="color:#F97583;">let</span><span style="color:#E1E4E8;"> permission_to_set_key_value_in_xor</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">PermissionToken</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">key_value</span><span style="color:#F97583;">::</span><span style="color:#B392F0;">CanRemoveKeyValueInUserAssets</span><span style="color:#F97583;">::</span><span style="color:#B392F0;">new</span><span style="color:#E1E4E8;">(alice_xor_id)</span><span style="color:#F97583;">.</span><span style="color:#B392F0;">into</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">// Create an instruction that grants Bob permission</span></span>
<span class="line"><span style="color:#6A737D;">// to remove key value from \`alice_xor_id\` asset</span></span>
<span class="line"><span style="color:#F97583;">let</span><span style="color:#E1E4E8;"> grant </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Instruction</span><span style="color:#F97583;">::</span><span style="color:#B392F0;">Grant</span><span style="color:#E1E4E8;">(</span><span style="color:#B392F0;">GrantBox</span><span style="color:#F97583;">::</span><span style="color:#B392F0;">new</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">    permission_to_set_key_value_in_xor,</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">IdBox</span><span style="color:#F97583;">::</span><span style="color:#B392F0;">AccountId</span><span style="color:#E1E4E8;">(bob_id),</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">let</span><span style="color:#24292E;"> bob_id </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">AccountId</span><span style="color:#D73A49;">::</span><span style="color:#6F42C1;">from_str</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;bob@test&quot;</span><span style="color:#24292E;">)</span><span style="color:#D73A49;">?</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#D73A49;">let</span><span style="color:#24292E;"> alice_id </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">AccountId</span><span style="color:#D73A49;">::</span><span style="color:#6F42C1;">from_str</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;alice@test&quot;</span><span style="color:#24292E;">)</span><span style="color:#D73A49;">?</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#D73A49;">let</span><span style="color:#24292E;"> alice_xor_id </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">AssetId</span><span style="color:#D73A49;">::</span><span style="color:#6F42C1;">new</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">AssetDefinitionId</span><span style="color:#D73A49;">::</span><span style="color:#6F42C1;">from_str</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;xor#test&quot;</span><span style="color:#24292E;">)</span><span style="color:#D73A49;">?</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">AccountId</span><span style="color:#D73A49;">::</span><span style="color:#6F42C1;">from_str</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;alice@test&quot;</span><span style="color:#24292E;">)</span><span style="color:#D73A49;">?</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">// Create a new \`CanRemoveKeyValueInUserAssets\` permission token</span></span>
<span class="line"><span style="color:#6A737D;">// that allows to remove key value from \`alice_xor_id\` asset</span></span>
<span class="line"><span style="color:#D73A49;">let</span><span style="color:#24292E;"> permission_to_set_key_value_in_xor</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">PermissionToken</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">key_value</span><span style="color:#D73A49;">::</span><span style="color:#6F42C1;">CanRemoveKeyValueInUserAssets</span><span style="color:#D73A49;">::</span><span style="color:#6F42C1;">new</span><span style="color:#24292E;">(alice_xor_id)</span><span style="color:#D73A49;">.</span><span style="color:#6F42C1;">into</span><span style="color:#24292E;">();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">// Create an instruction that grants Bob permission</span></span>
<span class="line"><span style="color:#6A737D;">// to remove key value from \`alice_xor_id\` asset</span></span>
<span class="line"><span style="color:#D73A49;">let</span><span style="color:#24292E;"> grant </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Instruction</span><span style="color:#D73A49;">::</span><span style="color:#6F42C1;">Grant</span><span style="color:#24292E;">(</span><span style="color:#6F42C1;">GrantBox</span><span style="color:#D73A49;">::</span><span style="color:#6F42C1;">new</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">    permission_to_set_key_value_in_xor,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">IdBox</span><span style="color:#D73A49;">::</span><span style="color:#6F42C1;">AccountId</span><span style="color:#24292E;">(bob_id),</span></span></code></pre></div><h3 id="cansetkeyvalueinusermetadata" tabindex="-1"><code>CanSetKeyValueInUserMetadata</code> <a class="header-anchor" href="#cansetkeyvalueinusermetadata" aria-label="Permalink to &quot;\`CanSetKeyValueInUserMetadata\`&quot;">​</a></h3><p>With <code>CanSetKeyValueInUserMetadata</code> permission token, a user can set a key value pair in the <a href="/iroha-2-docs/guide/blockchain/metadata.html">metadata</a> for the specified account.</p><div class="language-rust vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">rust</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">let</span><span style="color:#E1E4E8;"> mouse_id </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">AccountId</span><span style="color:#F97583;">::</span><span style="color:#B392F0;">from_str</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;mouse@wonderland&quot;</span><span style="color:#E1E4E8;">)</span><span style="color:#F97583;">?</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">// Create a new \`CanSetKeyValueInUserMetadata\` token that, when granted to another account,</span></span>
<span class="line"><span style="color:#6A737D;">// allows it to set key value to the metadata in Mouse&#39;s account</span></span>
<span class="line"><span style="color:#F97583;">let</span><span style="color:#E1E4E8;"> permission_to_set_key_value_in_mouse_metadata</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">PermissionToken</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">key_value</span><span style="color:#F97583;">::</span><span style="color:#B392F0;">CanSetKeyValueInUserMetadata</span><span style="color:#F97583;">::</span><span style="color:#B392F0;">new</span><span style="color:#E1E4E8;">(mouse_id)</span><span style="color:#F97583;">.</span><span style="color:#B392F0;">into</span><span style="color:#E1E4E8;">();</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">let</span><span style="color:#24292E;"> mouse_id </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">AccountId</span><span style="color:#D73A49;">::</span><span style="color:#6F42C1;">from_str</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;mouse@wonderland&quot;</span><span style="color:#24292E;">)</span><span style="color:#D73A49;">?</span><span style="color:#24292E;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">// Create a new \`CanSetKeyValueInUserMetadata\` token that, when granted to another account,</span></span>
<span class="line"><span style="color:#6A737D;">// allows it to set key value to the metadata in Mouse&#39;s account</span></span>
<span class="line"><span style="color:#D73A49;">let</span><span style="color:#24292E;"> permission_to_set_key_value_in_mouse_metadata</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">PermissionToken</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">key_value</span><span style="color:#D73A49;">::</span><span style="color:#6F42C1;">CanSetKeyValueInUserMetadata</span><span style="color:#D73A49;">::</span><span style="color:#6F42C1;">new</span><span style="color:#24292E;">(mouse_id)</span><span style="color:#D73A49;">.</span><span style="color:#6F42C1;">into</span><span style="color:#24292E;">();</span></span></code></pre></div><h3 id="canremovekeyvalueinusermetadata" tabindex="-1"><code>CanRemoveKeyValueInUserMetadata</code> <a class="header-anchor" href="#canremovekeyvalueinusermetadata" aria-label="Permalink to &quot;\`CanRemoveKeyValueInUserMetadata\`&quot;">​</a></h3><p>With <code>CanRemoveKeyValueInUserMetadata</code> permission token, a user can remove a key value pair in the <a href="/iroha-2-docs/guide/blockchain/metadata.html">metadata</a> for the specified account.</p><div class="language-rust vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">rust</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">let</span><span style="color:#E1E4E8;"> mouse_id </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">AccountId</span><span style="color:#F97583;">::</span><span style="color:#B392F0;">from_str</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;mouse@wonderland&quot;</span><span style="color:#E1E4E8;">)</span><span style="color:#F97583;">?</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">// Create a new \`CanRemoveKeyValueInUserMetadata\` token that, when granted to another account,</span></span>
<span class="line"><span style="color:#6A737D;">// allows it to remove key value from the metadata in Mouse&#39;s account</span></span>
<span class="line"><span style="color:#F97583;">let</span><span style="color:#E1E4E8;"> permission_to_remove_key_value_in_mouse_metadata</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">PermissionToken</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">key_value</span><span style="color:#F97583;">::</span><span style="color:#B392F0;">CanRemoveKeyValueInUserMetadata</span><span style="color:#F97583;">::</span><span style="color:#B392F0;">new</span><span style="color:#E1E4E8;">(mouse_id)</span><span style="color:#F97583;">.</span><span style="color:#B392F0;">into</span><span style="color:#E1E4E8;">();</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">let</span><span style="color:#24292E;"> mouse_id </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">AccountId</span><span style="color:#D73A49;">::</span><span style="color:#6F42C1;">from_str</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;mouse@wonderland&quot;</span><span style="color:#24292E;">)</span><span style="color:#D73A49;">?</span><span style="color:#24292E;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">// Create a new \`CanRemoveKeyValueInUserMetadata\` token that, when granted to another account,</span></span>
<span class="line"><span style="color:#6A737D;">// allows it to remove key value from the metadata in Mouse&#39;s account</span></span>
<span class="line"><span style="color:#D73A49;">let</span><span style="color:#24292E;"> permission_to_remove_key_value_in_mouse_metadata</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">PermissionToken</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">key_value</span><span style="color:#D73A49;">::</span><span style="color:#6F42C1;">CanRemoveKeyValueInUserMetadata</span><span style="color:#D73A49;">::</span><span style="color:#6F42C1;">new</span><span style="color:#24292E;">(mouse_id)</span><span style="color:#D73A49;">.</span><span style="color:#6F42C1;">into</span><span style="color:#24292E;">();</span></span></code></pre></div><h3 id="cansetkeyvalueinassetdefinition" tabindex="-1"><code>CanSetKeyValueInAssetDefinition</code> <a class="header-anchor" href="#cansetkeyvalueinassetdefinition" aria-label="Permalink to &quot;\`CanSetKeyValueInAssetDefinition\`&quot;">​</a></h3><p>With <code>CanSetKeyValueInAssetDefinition</code> permission token, a user can set key value in the corresponding asset definition.</p><div class="language-rust vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">rust</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">let</span><span style="color:#E1E4E8;"> bob_id </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">AccountId</span><span style="color:#F97583;">::</span><span style="color:#B392F0;">from_str</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;bob@test&quot;</span><span style="color:#E1E4E8;">)</span><span style="color:#F97583;">?</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#F97583;">let</span><span style="color:#E1E4E8;"> alice_id </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">AccountId</span><span style="color:#F97583;">::</span><span style="color:#B392F0;">from_str</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;alice@test&quot;</span><span style="color:#E1E4E8;">)</span><span style="color:#F97583;">?</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#F97583;">let</span><span style="color:#E1E4E8;"> alice_xor_id </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">AssetId</span><span style="color:#F97583;">::</span><span style="color:#B392F0;">new</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">AssetDefinitionId</span><span style="color:#F97583;">::</span><span style="color:#B392F0;">from_str</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;xor#test&quot;</span><span style="color:#E1E4E8;">)</span><span style="color:#F97583;">?</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">AccountId</span><span style="color:#F97583;">::</span><span style="color:#B392F0;">from_str</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;alice@test&quot;</span><span style="color:#E1E4E8;">)</span><span style="color:#F97583;">?</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">// Create a new \`CanSetKeyValueInAssetDefinition\` permission token</span></span>
<span class="line"><span style="color:#6A737D;">// that allows to set key value in \`alice_xor_id\` asset definition</span></span>
<span class="line"><span style="color:#F97583;">let</span><span style="color:#E1E4E8;"> permission_to_set_key_value_in_xor</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">PermissionToken</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">key_value</span><span style="color:#F97583;">::</span><span style="color:#B392F0;">CanSetKeyValueInAssetDefinition</span><span style="color:#F97583;">::</span><span style="color:#B392F0;">new</span><span style="color:#E1E4E8;">(alice_xor_id)</span><span style="color:#F97583;">.</span><span style="color:#B392F0;">into</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">// Create an instruction that grants Bob permission</span></span>
<span class="line"><span style="color:#6A737D;">// to set key value in \`alice_xor_id\` asset definition</span></span>
<span class="line"><span style="color:#F97583;">let</span><span style="color:#E1E4E8;"> grant </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Instruction</span><span style="color:#F97583;">::</span><span style="color:#B392F0;">Grant</span><span style="color:#E1E4E8;">(</span><span style="color:#B392F0;">GrantBox</span><span style="color:#F97583;">::</span><span style="color:#B392F0;">new</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">    permission_to_set_key_value_in_xor,</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">IdBox</span><span style="color:#F97583;">::</span><span style="color:#B392F0;">AccountId</span><span style="color:#E1E4E8;">(bob_id),</span></span>
<span class="line"><span style="color:#E1E4E8;">));</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">let</span><span style="color:#24292E;"> bob_id </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">AccountId</span><span style="color:#D73A49;">::</span><span style="color:#6F42C1;">from_str</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;bob@test&quot;</span><span style="color:#24292E;">)</span><span style="color:#D73A49;">?</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#D73A49;">let</span><span style="color:#24292E;"> alice_id </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">AccountId</span><span style="color:#D73A49;">::</span><span style="color:#6F42C1;">from_str</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;alice@test&quot;</span><span style="color:#24292E;">)</span><span style="color:#D73A49;">?</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#D73A49;">let</span><span style="color:#24292E;"> alice_xor_id </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">AssetId</span><span style="color:#D73A49;">::</span><span style="color:#6F42C1;">new</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">AssetDefinitionId</span><span style="color:#D73A49;">::</span><span style="color:#6F42C1;">from_str</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;xor#test&quot;</span><span style="color:#24292E;">)</span><span style="color:#D73A49;">?</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">AccountId</span><span style="color:#D73A49;">::</span><span style="color:#6F42C1;">from_str</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;alice@test&quot;</span><span style="color:#24292E;">)</span><span style="color:#D73A49;">?</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">// Create a new \`CanSetKeyValueInAssetDefinition\` permission token</span></span>
<span class="line"><span style="color:#6A737D;">// that allows to set key value in \`alice_xor_id\` asset definition</span></span>
<span class="line"><span style="color:#D73A49;">let</span><span style="color:#24292E;"> permission_to_set_key_value_in_xor</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">PermissionToken</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">key_value</span><span style="color:#D73A49;">::</span><span style="color:#6F42C1;">CanSetKeyValueInAssetDefinition</span><span style="color:#D73A49;">::</span><span style="color:#6F42C1;">new</span><span style="color:#24292E;">(alice_xor_id)</span><span style="color:#D73A49;">.</span><span style="color:#6F42C1;">into</span><span style="color:#24292E;">();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">// Create an instruction that grants Bob permission</span></span>
<span class="line"><span style="color:#6A737D;">// to set key value in \`alice_xor_id\` asset definition</span></span>
<span class="line"><span style="color:#D73A49;">let</span><span style="color:#24292E;"> grant </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Instruction</span><span style="color:#D73A49;">::</span><span style="color:#6F42C1;">Grant</span><span style="color:#24292E;">(</span><span style="color:#6F42C1;">GrantBox</span><span style="color:#D73A49;">::</span><span style="color:#6F42C1;">new</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">    permission_to_set_key_value_in_xor,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">IdBox</span><span style="color:#D73A49;">::</span><span style="color:#6F42C1;">AccountId</span><span style="color:#24292E;">(bob_id),</span></span>
<span class="line"><span style="color:#24292E;">));</span></span></code></pre></div><h3 id="canremovekeyvalueinassetdefinition" tabindex="-1"><code>CanRemoveKeyValueInAssetDefinition</code> <a class="header-anchor" href="#canremovekeyvalueinassetdefinition" aria-label="Permalink to &quot;\`CanRemoveKeyValueInAssetDefinition\`&quot;">​</a></h3><p>With <code>CanRemoveKeyValueInAssetDefinition</code> permission token, a user can remove key value in the corresponding asset definition.</p><div class="language-rust vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">rust</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">let</span><span style="color:#E1E4E8;"> bob_id </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">AccountId</span><span style="color:#F97583;">::</span><span style="color:#B392F0;">from_str</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;bob@test&quot;</span><span style="color:#E1E4E8;">)</span><span style="color:#F97583;">?</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#F97583;">let</span><span style="color:#E1E4E8;"> alice_id </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">AccountId</span><span style="color:#F97583;">::</span><span style="color:#B392F0;">from_str</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;alice@test&quot;</span><span style="color:#E1E4E8;">)</span><span style="color:#F97583;">?</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#F97583;">let</span><span style="color:#E1E4E8;"> alice_xor_id </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">AssetId</span><span style="color:#F97583;">::</span><span style="color:#B392F0;">new</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">AssetDefinitionId</span><span style="color:#F97583;">::</span><span style="color:#B392F0;">from_str</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;xor#test&quot;</span><span style="color:#E1E4E8;">)</span><span style="color:#F97583;">?</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">AccountId</span><span style="color:#F97583;">::</span><span style="color:#B392F0;">from_str</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;alice@test&quot;</span><span style="color:#E1E4E8;">)</span><span style="color:#F97583;">?</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">// Create a new \`CanRemoveKeyValueInAssetDefinition\` permission token</span></span>
<span class="line"><span style="color:#6A737D;">// that allows to remove key value from \`alice_xor_id\` asset definition</span></span>
<span class="line"><span style="color:#F97583;">let</span><span style="color:#E1E4E8;"> permission_to_remove_key_value_from_xor</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">PermissionToken</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">key_value</span><span style="color:#F97583;">::</span><span style="color:#B392F0;">CanRemoveKeyValueInAssetDefinition</span><span style="color:#F97583;">::</span><span style="color:#B392F0;">new</span><span style="color:#E1E4E8;">(alice_xor_id)</span><span style="color:#F97583;">.</span><span style="color:#B392F0;">into</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">// Create an instruction that grants Bob permission</span></span>
<span class="line"><span style="color:#6A737D;">// to remove key value from \`alice_xor_id\` asset definition</span></span>
<span class="line"><span style="color:#F97583;">let</span><span style="color:#E1E4E8;"> grant </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Instruction</span><span style="color:#F97583;">::</span><span style="color:#B392F0;">Grant</span><span style="color:#E1E4E8;">(</span><span style="color:#B392F0;">GrantBox</span><span style="color:#F97583;">::</span><span style="color:#B392F0;">new</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">    permission_to_remove_key_value_from_xor,</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">IdBox</span><span style="color:#F97583;">::</span><span style="color:#B392F0;">AccountId</span><span style="color:#E1E4E8;">(bob_id),</span></span>
<span class="line"><span style="color:#E1E4E8;">));</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">let</span><span style="color:#24292E;"> bob_id </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">AccountId</span><span style="color:#D73A49;">::</span><span style="color:#6F42C1;">from_str</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;bob@test&quot;</span><span style="color:#24292E;">)</span><span style="color:#D73A49;">?</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#D73A49;">let</span><span style="color:#24292E;"> alice_id </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">AccountId</span><span style="color:#D73A49;">::</span><span style="color:#6F42C1;">from_str</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;alice@test&quot;</span><span style="color:#24292E;">)</span><span style="color:#D73A49;">?</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#D73A49;">let</span><span style="color:#24292E;"> alice_xor_id </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">AssetId</span><span style="color:#D73A49;">::</span><span style="color:#6F42C1;">new</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">AssetDefinitionId</span><span style="color:#D73A49;">::</span><span style="color:#6F42C1;">from_str</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;xor#test&quot;</span><span style="color:#24292E;">)</span><span style="color:#D73A49;">?</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">AccountId</span><span style="color:#D73A49;">::</span><span style="color:#6F42C1;">from_str</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;alice@test&quot;</span><span style="color:#24292E;">)</span><span style="color:#D73A49;">?</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">// Create a new \`CanRemoveKeyValueInAssetDefinition\` permission token</span></span>
<span class="line"><span style="color:#6A737D;">// that allows to remove key value from \`alice_xor_id\` asset definition</span></span>
<span class="line"><span style="color:#D73A49;">let</span><span style="color:#24292E;"> permission_to_remove_key_value_from_xor</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">PermissionToken</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">key_value</span><span style="color:#D73A49;">::</span><span style="color:#6F42C1;">CanRemoveKeyValueInAssetDefinition</span><span style="color:#D73A49;">::</span><span style="color:#6F42C1;">new</span><span style="color:#24292E;">(alice_xor_id)</span><span style="color:#D73A49;">.</span><span style="color:#6F42C1;">into</span><span style="color:#24292E;">();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">// Create an instruction that grants Bob permission</span></span>
<span class="line"><span style="color:#6A737D;">// to remove key value from \`alice_xor_id\` asset definition</span></span>
<span class="line"><span style="color:#D73A49;">let</span><span style="color:#24292E;"> grant </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Instruction</span><span style="color:#D73A49;">::</span><span style="color:#6F42C1;">Grant</span><span style="color:#24292E;">(</span><span style="color:#6F42C1;">GrantBox</span><span style="color:#D73A49;">::</span><span style="color:#6F42C1;">new</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">    permission_to_remove_key_value_from_xor,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">IdBox</span><span style="color:#D73A49;">::</span><span style="color:#6F42C1;">AccountId</span><span style="color:#24292E;">(bob_id),</span></span>
<span class="line"><span style="color:#24292E;">));</span></span></code></pre></div><h3 id="canregisterdomains" tabindex="-1"><code>CanRegisterDomains</code> <a class="header-anchor" href="#canregisterdomains" aria-label="Permalink to &quot;\`CanRegisterDomains\`&quot;">​</a></h3><p>With <code>CanRegisterDomains</code> permission token, a user can <a href="./instructions.html#un-register">register</a> domains.</p><div class="language-rust vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">rust</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">let</span><span style="color:#E1E4E8;"> alice_id </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">AccountId</span><span style="color:#F97583;">::</span><span style="color:#B392F0;">from_str</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;alice@test0&quot;</span><span style="color:#E1E4E8;">)</span><span style="color:#F97583;">?</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#F97583;">let</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">mut</span><span style="color:#E1E4E8;"> alice </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Account</span><span style="color:#F97583;">::</span><span style="color:#B392F0;">new</span><span style="color:#E1E4E8;">(alice_id, [])</span><span style="color:#F97583;">.</span><span style="color:#B392F0;">build</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">// Create a new \`CanRegisterDomains\` permission token</span></span>
<span class="line"><span style="color:#6A737D;">// that allows registering new domains</span></span>
<span class="line"><span style="color:#F97583;">let</span><span style="color:#E1E4E8;"> permission_token_to_register_domains</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">PermissionToken</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">register</span><span style="color:#F97583;">::</span><span style="color:#B392F0;">CanRegisterDomains</span><span style="color:#F97583;">::</span><span style="color:#B392F0;">new</span><span style="color:#E1E4E8;">()</span><span style="color:#F97583;">.</span><span style="color:#B392F0;">into</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">// Create an instruction that grants Alice permission to register new domains</span></span>
<span class="line"><span style="color:#F97583;">let</span><span style="color:#E1E4E8;"> grant </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Instruction</span><span style="color:#F97583;">::</span><span style="color:#B392F0;">Grant</span><span style="color:#E1E4E8;">(</span><span style="color:#B392F0;">GrantBox</span><span style="color:#F97583;">::</span><span style="color:#B392F0;">new</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">    permission_token_to_register_domains,</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">IdBox</span><span style="color:#F97583;">::</span><span style="color:#B392F0;">AccountId</span><span style="color:#E1E4E8;">(alice_id),</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">let</span><span style="color:#24292E;"> alice_id </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">AccountId</span><span style="color:#D73A49;">::</span><span style="color:#6F42C1;">from_str</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;alice@test0&quot;</span><span style="color:#24292E;">)</span><span style="color:#D73A49;">?</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#D73A49;">let</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">mut</span><span style="color:#24292E;"> alice </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Account</span><span style="color:#D73A49;">::</span><span style="color:#6F42C1;">new</span><span style="color:#24292E;">(alice_id, [])</span><span style="color:#D73A49;">.</span><span style="color:#6F42C1;">build</span><span style="color:#24292E;">();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">// Create a new \`CanRegisterDomains\` permission token</span></span>
<span class="line"><span style="color:#6A737D;">// that allows registering new domains</span></span>
<span class="line"><span style="color:#D73A49;">let</span><span style="color:#24292E;"> permission_token_to_register_domains</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">PermissionToken</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">register</span><span style="color:#D73A49;">::</span><span style="color:#6F42C1;">CanRegisterDomains</span><span style="color:#D73A49;">::</span><span style="color:#6F42C1;">new</span><span style="color:#24292E;">()</span><span style="color:#D73A49;">.</span><span style="color:#6F42C1;">into</span><span style="color:#24292E;">();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">// Create an instruction that grants Alice permission to register new domains</span></span>
<span class="line"><span style="color:#D73A49;">let</span><span style="color:#24292E;"> grant </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Instruction</span><span style="color:#D73A49;">::</span><span style="color:#6F42C1;">Grant</span><span style="color:#24292E;">(</span><span style="color:#6F42C1;">GrantBox</span><span style="color:#D73A49;">::</span><span style="color:#6F42C1;">new</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">    permission_token_to_register_domains,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">IdBox</span><span style="color:#D73A49;">::</span><span style="color:#6F42C1;">AccountId</span><span style="color:#24292E;">(alice_id),</span></span></code></pre></div><h2 id="permission-groups-roles" tabindex="-1">Permission Groups (Roles) <a class="header-anchor" href="#permission-groups-roles" aria-label="Permalink to &quot;Permission Groups (Roles)&quot;">​</a></h2><p>A set of permissions is called a <strong>role</strong>. Similarly to permission tokens, roles can be granted using the <code>Grant</code> instruction and revoked using the <code>Revoke</code> instruction.</p><p>Before granting a role to an account, the role should be registered first.</p><h3 id="register-a-new-role" tabindex="-1">Register a new role <a class="header-anchor" href="#register-a-new-role" aria-label="Permalink to &quot;Register a new role&quot;">​</a></h3><p>Let&#39;s register a new role that, when granted, will allow another account access to the <a href="/iroha-2-docs/guide/blockchain/metadata.html">metadata</a> in Mouse&#39;s account:</p><div class="language-rust vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">rust</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">let</span><span style="color:#E1E4E8;"> role_id </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">RoleId</span><span style="color:#F97583;">::</span><span style="color:#B392F0;">from_str</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;ACCESS_TO_MOUSE_METADATA&quot;</span><span style="color:#E1E4E8;">)</span><span style="color:#F97583;">?</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#F97583;">let</span><span style="color:#E1E4E8;"> role </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">iroha_data_model</span><span style="color:#F97583;">::</span><span style="color:#B392F0;">role</span><span style="color:#F97583;">::</span><span style="color:#B392F0;">Role</span><span style="color:#F97583;">::</span><span style="color:#B392F0;">new</span><span style="color:#E1E4E8;">(role_id)</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">.</span><span style="color:#B392F0;">add_permission</span><span style="color:#E1E4E8;">(</span><span style="color:#B392F0;">CanSetKeyValueInUserMetadata</span><span style="color:#F97583;">::</span><span style="color:#B392F0;">new</span><span style="color:#E1E4E8;">(mouse_id))</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">.</span><span style="color:#B392F0;">add_permission</span><span style="color:#E1E4E8;">(</span><span style="color:#B392F0;">CanRemoveKeyValueInUserMetadata</span><span style="color:#F97583;">::</span><span style="color:#B392F0;">new</span><span style="color:#E1E4E8;">(mouse_id));</span></span>
<span class="line"><span style="color:#F97583;">let</span><span style="color:#E1E4E8;"> register_role </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">RegisterBox</span><span style="color:#F97583;">::</span><span style="color:#B392F0;">new</span><span style="color:#E1E4E8;">(role);</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">let</span><span style="color:#24292E;"> role_id </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">RoleId</span><span style="color:#D73A49;">::</span><span style="color:#6F42C1;">from_str</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;ACCESS_TO_MOUSE_METADATA&quot;</span><span style="color:#24292E;">)</span><span style="color:#D73A49;">?</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#D73A49;">let</span><span style="color:#24292E;"> role </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">iroha_data_model</span><span style="color:#D73A49;">::</span><span style="color:#6F42C1;">role</span><span style="color:#D73A49;">::</span><span style="color:#6F42C1;">Role</span><span style="color:#D73A49;">::</span><span style="color:#6F42C1;">new</span><span style="color:#24292E;">(role_id)</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">.</span><span style="color:#6F42C1;">add_permission</span><span style="color:#24292E;">(</span><span style="color:#6F42C1;">CanSetKeyValueInUserMetadata</span><span style="color:#D73A49;">::</span><span style="color:#6F42C1;">new</span><span style="color:#24292E;">(mouse_id))</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">.</span><span style="color:#6F42C1;">add_permission</span><span style="color:#24292E;">(</span><span style="color:#6F42C1;">CanRemoveKeyValueInUserMetadata</span><span style="color:#D73A49;">::</span><span style="color:#6F42C1;">new</span><span style="color:#24292E;">(mouse_id));</span></span>
<span class="line"><span style="color:#D73A49;">let</span><span style="color:#24292E;"> register_role </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">RegisterBox</span><span style="color:#D73A49;">::</span><span style="color:#6F42C1;">new</span><span style="color:#24292E;">(role);</span></span></code></pre></div><h3 id="grant-a-role" tabindex="-1">Grant a role <a class="header-anchor" href="#grant-a-role" aria-label="Permalink to &quot;Grant a role&quot;">​</a></h3><p>After the role is registered, Mouse can grant it to Alice:</p><div class="language-rust vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">rust</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">let</span><span style="color:#E1E4E8;"> grant_role </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">GrantBox</span><span style="color:#F97583;">::</span><span style="color:#B392F0;">new</span><span style="color:#E1E4E8;">(role_id, alice_id);</span></span>
<span class="line"><span style="color:#F97583;">let</span><span style="color:#E1E4E8;"> grant_role_tx </span><span style="color:#F97583;">=</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">Transaction</span><span style="color:#F97583;">::</span><span style="color:#B392F0;">new</span><span style="color:#E1E4E8;">(mouse_id, </span><span style="color:#B392F0;">vec!</span><span style="color:#E1E4E8;">[grant_role</span><span style="color:#F97583;">.</span><span style="color:#B392F0;">into</span><span style="color:#E1E4E8;">()]</span><span style="color:#F97583;">.</span><span style="color:#B392F0;">into</span><span style="color:#E1E4E8;">(), </span><span style="color:#79B8FF;">100_000</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">.</span><span style="color:#B392F0;">sign</span><span style="color:#E1E4E8;">(mouse_key_pair)</span><span style="color:#F97583;">?</span><span style="color:#E1E4E8;">;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">let</span><span style="color:#24292E;"> grant_role </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">GrantBox</span><span style="color:#D73A49;">::</span><span style="color:#6F42C1;">new</span><span style="color:#24292E;">(role_id, alice_id);</span></span>
<span class="line"><span style="color:#D73A49;">let</span><span style="color:#24292E;"> grant_role_tx </span><span style="color:#D73A49;">=</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">Transaction</span><span style="color:#D73A49;">::</span><span style="color:#6F42C1;">new</span><span style="color:#24292E;">(mouse_id, </span><span style="color:#6F42C1;">vec!</span><span style="color:#24292E;">[grant_role</span><span style="color:#D73A49;">.</span><span style="color:#6F42C1;">into</span><span style="color:#24292E;">()]</span><span style="color:#D73A49;">.</span><span style="color:#6F42C1;">into</span><span style="color:#24292E;">(), </span><span style="color:#005CC5;">100_000</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">.</span><span style="color:#6F42C1;">sign</span><span style="color:#24292E;">(mouse_key_pair)</span><span style="color:#D73A49;">?</span><span style="color:#24292E;">;</span></span></code></pre></div><h2 id="permission-validators" tabindex="-1">Permission Validators <a class="header-anchor" href="#permission-validators" aria-label="Permalink to &quot;Permission Validators&quot;">​</a></h2><p>Permissions exist so that only those accounts that have a required permission token to perform a certain action could do so.</p><p>The <code>Judge</code> trait is used to check permissions. The <code>Judge</code> decides whether a certain operation (instruction, query, or expression) could be performed based on the verdicts of multiple validators.</p><p>Each validator returns one of the following verdicts: <code>Deny</code> (with the exact reason to deny an operation), <code>Skip</code> (if an operation is not supported or has no meaning in a given context), or <code>Allow</code>.</p><p>There are several implementations of the <code>Judge</code> trait in Iroha 2, such as:</p><table><thead><tr><th>Judge</th><th>Description</th></tr></thead><tbody><tr><td><code>AtLeastOneAllow</code></td><td>The judge that succeeds only if there is at least one <code>Allow</code> verdict. The execution is stopped once there is a first <code>Allow</code> verdict.</td></tr><tr><td><code>NoDenies</code></td><td>The judge that succeeds only if there is no <code>Deny</code> verdict. All validators are checked.</td></tr><tr><td><code>NoDeniesAndAtLeastOneAllow</code></td><td>The judge that succeeds only if there is no <code>Deny</code> verdict and at least one <code>Allow</code> verdict. The execution is stopped once there is a <code>Deny</code> verdict or all validators were checked.</td></tr><tr><td><code>AllowAll</code></td><td>For tests and simple cases. All operations are allowed to be executed for all possible values.</td></tr><tr><td><code>DenyAll</code></td><td>For tests and simple cases. All operations are disallowed to be executed for all possible for all possible values.</td></tr></tbody></table><p>You can also build a custom permission validator by combining multiple validators, all of which should be of the same type (for checking instructions, queries, or expressions).</p><h3 id="runtime-validators" tabindex="-1">Runtime Validators <a class="header-anchor" href="#runtime-validators" aria-label="Permalink to &quot;Runtime Validators&quot;">​</a></h3><p>Currently Iroha 2 has only built-in validators. In the future, built-in validators will be completely replaced with <strong>runtime validators</strong> that use WASM.</p><p>The <strong>chain</strong> of runtime validators is used to validate operations that require permissions. It works similarly to the <a href="https://en.wikipedia.org/wiki/Chain-of-responsibility_pattern" target="_blank" rel="noreferrer"><code>Chain of responsibility</code></a>.</p><p>All runtime validators return <strong>validation verdict</strong>. By default, all operations are considered <strong>valid</strong> unless proven otherwise. Validators check whether or not an operation is not allowed: each validator either allows an operation and passes it to the following validator, or denies the operation. The validation stops at the first <code>Deny</code> verdict.</p><h2 id="supported-queries" tabindex="-1">Supported Queries <a class="header-anchor" href="#supported-queries" aria-label="Permalink to &quot;Supported Queries&quot;">​</a></h2><p>Permission tokens and roles can be queried.</p><p>Queries for roles:</p><ul><li><a href="./queries.html#findallroles"><code>FindAllRoles</code></a></li><li><a href="./queries.html#findallroleids"><code>FindAllRoleIds</code></a></li><li><a href="./queries.html#findrolebyroleid"><code>FindRoleByRoleId</code></a></li><li><a href="./queries.html#findrolesbyaccountid"><code>FindRolesByAccountId</code></a></li></ul><p>Queries for permission tokens:</p><ul><li><a href="./queries.html#findallpermissiontokendefinitions"><code>FindAllPermissionTokenDefinitions</code></a></li><li><a href="./queries.html#findpermissiontokensbyaccountid"><code>FindPermissionTokensByAccountId</code></a></li></ul>`,76),p=[e];function t(r,c,i,y,E,d){return n(),a("div",null,p)}const A=s(l,[["render",t]]);export{u as __pageData,A as default};
