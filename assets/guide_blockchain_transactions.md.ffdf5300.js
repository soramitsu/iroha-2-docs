import{_ as s,o as a,c as n,Q as o}from"./chunks/framework.1293becd.js";const h=JSON.parse('{"title":"Transactions","description":"","frontmatter":{},"headers":[],"relativePath":"guide/blockchain/transactions.md","filePath":"guide/blockchain/transactions.md","lastUpdated":1695725126000}'),l={name:"guide/blockchain/transactions.md"},e=o(`<h1 id="transactions" tabindex="-1">Transactions <a class="header-anchor" href="#transactions" aria-label="Permalink to &quot;Transactions&quot;">â€‹</a></h1><p>A <strong>transaction</strong> is a collection of <a href="./instructions.html">instructions</a>. The instructions within a transaction can be executed in a sequence or compiled into a <a href="./wasm.html">WASM blob</a>.</p><p>All interactions in the blockchain are done via transactions.</p><p>Here is an example of creating a new transaction with the <code>Grant</code> instruction. In this transaction, Mouse is granting Alice the specified role (<code>role_id</code>). Check <a href="./permissions.html#register-a-new-role">the full example</a>.</p><div class="language-rust vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">rust</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">let</span><span style="color:#E1E4E8;"> grant_role </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">GrantBox</span><span style="color:#F97583;">::</span><span style="color:#B392F0;">new</span><span style="color:#E1E4E8;">(role_id, alice_id);</span></span>
<span class="line"><span style="color:#F97583;">let</span><span style="color:#E1E4E8;"> grant_role_tx </span><span style="color:#F97583;">=</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">Transaction</span><span style="color:#F97583;">::</span><span style="color:#B392F0;">new</span><span style="color:#E1E4E8;">(mouse_id, </span><span style="color:#B392F0;">vec!</span><span style="color:#E1E4E8;">[grant_role</span><span style="color:#F97583;">.</span><span style="color:#B392F0;">into</span><span style="color:#E1E4E8;">()]</span><span style="color:#F97583;">.</span><span style="color:#B392F0;">into</span><span style="color:#E1E4E8;">(), </span><span style="color:#79B8FF;">100_000</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">.</span><span style="color:#B392F0;">sign</span><span style="color:#E1E4E8;">(mouse_key_pair)</span><span style="color:#F97583;">?</span><span style="color:#E1E4E8;">;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">let</span><span style="color:#24292E;"> grant_role </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">GrantBox</span><span style="color:#D73A49;">::</span><span style="color:#6F42C1;">new</span><span style="color:#24292E;">(role_id, alice_id);</span></span>
<span class="line"><span style="color:#D73A49;">let</span><span style="color:#24292E;"> grant_role_tx </span><span style="color:#D73A49;">=</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">Transaction</span><span style="color:#D73A49;">::</span><span style="color:#6F42C1;">new</span><span style="color:#24292E;">(mouse_id, </span><span style="color:#6F42C1;">vec!</span><span style="color:#24292E;">[grant_role</span><span style="color:#D73A49;">.</span><span style="color:#6F42C1;">into</span><span style="color:#24292E;">()]</span><span style="color:#D73A49;">.</span><span style="color:#6F42C1;">into</span><span style="color:#24292E;">(), </span><span style="color:#005CC5;">100_000</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">.</span><span style="color:#6F42C1;">sign</span><span style="color:#24292E;">(mouse_key_pair)</span><span style="color:#D73A49;">?</span><span style="color:#24292E;">;</span></span></code></pre></div>`,5),t=[e];function p(c,r,i,y,E,d){return a(),n("div",null,t)}const u=s(l,[["render",p]]);export{h as __pageData,u as default};
